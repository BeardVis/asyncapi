<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neuroglia.AsyncApi.Client.Redis</name>
    </assembly>
    <members>
        <member name="T:Neuroglia.AsyncApi.IAsyncApiClientOptionsBuilderExtensions">
            <summary>
            Defines extensions for <see cref="T:Neuroglia.AsyncApi.Client.Services.IAsyncApiClient"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.AsyncApi.IAsyncApiClientOptionsBuilderExtensions.UseRedisBinding(Neuroglia.AsyncApi.Client.Configuration.IAsyncApiClientOptionsBuilder)">
            <summary>
            Adds a Redis implementation of the <see cref="T:Neuroglia.AsyncApi.Client.Services.IChannelBinding"/> interface
            </summary>
            <param name="builder">The <see cref="T:Neuroglia.AsyncApi.Client.Configuration.IAsyncApiClientOptionsBuilder"/> to configure</param>
            <returns>The configured <see cref="T:Neuroglia.AsyncApi.Client.Configuration.IAsyncApiClientOptionsBuilder"/></returns>
        </member>
        <member name="T:Neuroglia.AsyncApi.Client.RedisChannelBinding">
            <summary>
            Represents the NATS implementation of the <see cref="T:Neuroglia.AsyncApi.Client.Services.IChannelBinding"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBinding.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Neuroglia.Serialization.ISerializerProvider,Neuroglia.AsyncApi.Client.Services.IChannel,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Neuroglia.AsyncApi.Models.ServerDefinition}})">
            <summary>
            Initializes a new <see cref="T:Neuroglia.AsyncApi.Client.RedisChannelBinding"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="serializers">The service used to provide <see cref="T:Neuroglia.Serialization.ISerializer"/>s</param>
            <param name="channel">The <see cref="T:Neuroglia.AsyncApi.Client.Services.IChannel"/> the <see cref="T:Neuroglia.AsyncApi.Client.Services.ChannelBindingBase"/> belongs to</param>
            <param name="servers">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the mappings of the <see cref="T:Neuroglia.AsyncApi.Models.ServerDefinition"/>s available to the <see cref="T:Neuroglia.AsyncApi.Client.Services.IChannelBinding"/></param>
        </member>
        <member name="P:Neuroglia.AsyncApi.Client.RedisChannelBinding.ConnectionMultiplexer">
            <summary>
            Gets the <see cref="T:Neuroglia.AsyncApi.Client.RedisChannelBinding"/>'s <see cref="T:StackExchange.Redis.IConnectionMultiplexer"/>
            </summary>
        </member>
        <member name="P:Neuroglia.AsyncApi.Client.RedisChannelBinding.Subscriber">
            <summary>
            Gets the <see cref="T:Neuroglia.AsyncApi.Client.RedisChannelBinding"/>'s <see cref="T:StackExchange.Redis.ISubscriber"/>
            </summary>
        </member>
        <member name="P:Neuroglia.AsyncApi.Client.RedisChannelBinding.ConsumingMessages">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:Neuroglia.AsyncApi.Client.RedisChannelBinding"/> has subscribed to the channel's topic and is consuming messages
            </summary>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBinding.PublishAsync(Neuroglia.AsyncApi.Client.IMessage,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBinding.SubscribeAsync(System.IObserver{Neuroglia.AsyncApi.Client.IMessage},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBinding.OnMessageAsync(StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue)">
            <summary>
            Handles messages consumed by the <see cref="P:Neuroglia.AsyncApi.Client.RedisChannelBinding.Subscriber"/>
            </summary>
            <param name="channel">The channel that has consumed the message</param>
            <param name="value">The consumed message</param>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBinding.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.AsyncApi.Client.RedisChannelBindingFactory">
            <summary>
            Represents the NATS implementation of the <see cref="T:Neuroglia.AsyncApi.Client.Services.IChannelBindingFactory"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBindingFactory.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.AsyncApi.Client.RedisChannelBindingFactory"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:Neuroglia.Serialization.ISerializerProvider"/></param>
        </member>
        <member name="P:Neuroglia.AsyncApi.Client.RedisChannelBindingFactory.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBindingFactory.SupportsProtocol(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.AsyncApi.Client.RedisChannelBindingFactory.CreateBinding(Neuroglia.AsyncApi.Client.Services.IChannel,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Neuroglia.AsyncApi.Models.ServerDefinition}})">
            <inheritdoc/>
        </member>
    </members>
</doc>
